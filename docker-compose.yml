services:
  # Hadoop NameNode - JAVA 8
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    networks:
      - hadoop-spark

  # Hadoop DataNode - JAVA 8
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop-spark

  # Spark Master
  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_CONF_DIR=/conf
      - SPARK_LOCAL_DIRS=/tmp
    volumes:
      - ./spark-conf:/conf:ro
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    networks:
      - hadoop-spark

  # Spark Worker 1 - 2 CORES, 1GB
  spark-worker-1:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - SPARK_CONF_DIR=/conf
      - SPARK_LOCAL_DIRS=/tmp
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_INSTANCES=1
    volumes:
      - ./spark-conf:/conf:ro
    deploy:
      resources:
        limits:
          memory: 1.2G
          cpus: '2.0'
    networks:
      - hadoop-spark

  # Spark Worker 2 - 2 CORES, 1GB
  spark-worker-2:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - SPARK_CONF_DIR=/conf
      - SPARK_LOCAL_DIRS=/tmp
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_INSTANCES=1
    volumes:
      - ./spark-conf:/conf:ro
    deploy:
      resources:
        limits:
          memory: 1.2G
          cpus: '2.0'
    networks:
      - hadoop-spark

  # Flask API - CON JAVA 11 Y OPCIONES MÍNIMAS
  flask-api:
    build: 
      context: .
      dockerfile: Dockerfile.flask
    container_name: flask-api
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./src:/app/src
      - ./spark-conf:/app/spark-conf:ro
    depends_on:
      - namenode
      - spark-master
      - spark-worker-1
      - spark-worker-2
    environment:
      - HADOOP_NAMENODE_URL=hdfs://namenode:9000
      - HADOOP_NAMENODE_WEB_URL=http://namenode:9870
      - HDFS_USER=hdfs
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_CONF_DIR=/app/spark-conf
      - PYSPARK_PYTHON=/usr/local/bin/python
      - PYSPARK_DRIVER_PYTHON=/usr/local/bin/python
      # Opciones Java 11 MÍNIMAS solo para lo esencial
      - JAVA_TOOL_OPTIONS=--add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
    networks:
      - hadoop-spark

  # PostgreSQL comentado
  # postgres:
  #   image: postgres:13
  #   container_name: postgres-db
  #   environment:
  #     POSTGRES_DB: analytics_db
  #     POSTGRES_USER: analytics_user
  #     POSTGRES_PASSWORD: analytics_pass
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - hadoop-spark

volumes:
  hadoop_namenode:
  hadoop_datanode:
  # postgres_data:

networks:
  hadoop-spark:
    driver: bridge